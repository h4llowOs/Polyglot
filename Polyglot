import tkinter as tk
from tkinter import ttk

# --- basic Python to C++ converter ---
def python_to_cpp(code: str) -> str:
    lines = code.split("\n")
    cpp_lines = ["#include <iostream>", "using namespace std;", "", "int main() {"]
    for line in lines:
        line = line.strip()
        if line.startswith("print("):
            content = line[6:-1]
            cpp_lines.append(f'    cout << {content} << endl;')
        elif line.startswith("for "):
            # super basic: "for i in range(n):"
            parts = line.replace(":", "").split()
            if "range" in line:
                var = parts[1]
                n = line.split("range(")[1].split(")")[0]
                cpp_lines.append(f'    for (int {var}=0; {var}<{n}; {var}++) {{')
        elif line.startswith("if "):
            condition = line[3:-1]
            cpp_lines.append(f'    if ({condition}) {{')
        elif line.startswith("else:"):
            cpp_lines.append("    } else {")
        elif line == "":
            cpp_lines.append("")
        else:
            cpp_lines.append("    " + line)
    cpp_lines.append("    return 0;")
    cpp_lines.append("}")
    return "\n".join(cpp_lines)

# --- conversion dispatcher ---
def convert_code():
    input_lang = input_lang_var.get()
    output_lang = output_lang_var.get()
    input_code = input_text.get("1.0", tk.END).strip()

    if input_lang == "Python" and output_lang == "C++":
        converted = python_to_cpp(input_code)
    else:
        converted = f"Conversion {input_lang} â†’ {output_lang} not supported yet."

    output_text.delete("1.0", tk.END)
    output_text.insert(tk.END, converted)

# --- UI setup ---
root = tk.Tk()
root.title("Code Converter")

# dropdowns
languages = ["Python", "C++", "JavaScript"]

input_lang_var = tk.StringVar(value="Python")
output_lang_var = tk.StringVar(value="C++")

input_dropdown = ttk.Combobox(root, textvariable=input_lang_var, values=languages, state="readonly", width=12)
output_dropdown = ttk.Combobox(root, textvariable=output_lang_var, values=languages, state="readonly", width=12)

input_dropdown.grid(row=0, column=0, padx=10, pady=10, sticky="w")
output_dropdown.grid(row=0, column=1, padx=10, pady=10, sticky="e")

# text areas
input_text = tk.Text(root, height=20, width=50)
output_text = tk.Text(root, height=20, width=50)

input_text.grid(row=1, column=0, padx=10, pady=10)
output_text.grid(row=1, column=1, padx=10, pady=10)

# bind typing event for live conversion
input_text.bind("<KeyRelease>", lambda event: convert_code())

root.mainloop()
